{"title":{"en":"F. RBS","ru":"F. ПСП"},"contestId":"1598","problemIndex":"F","timeLimit":{"en":"3 seconds","ru":"3 секунды"},"memLimit":{"en":"512 megabytes","ru":"512 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>A bracket sequence is a string containing only characters \"<span class=\"tex-font-style-tt\">(</span>\" and \"<span class=\"tex-font-style-tt\">)</span>\". A regular bracket sequence (or, shortly, an RBS) is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"<span class=\"tex-font-style-tt\">1</span>\" and \"<span class=\"tex-font-style-tt\">+</span>\" between the original characters of the sequence. For example:</p><ul> <li> bracket sequences \"<span class=\"tex-font-style-tt\">()()</span>\" and \"<span class=\"tex-font-style-tt\">(())</span>\" are regular (the resulting expressions are: \"<span class=\"tex-font-style-tt\">(1)+(1)</span>\" and \"<span class=\"tex-font-style-tt\">((1+1)+1)</span>\"); </li><li> bracket sequences \"<span class=\"tex-font-style-tt\">)(</span>\", \"<span class=\"tex-font-style-tt\">(</span>\" and \"<span class=\"tex-font-style-tt\">)</span>\" are not. </li></ul><p>Let's denote the concatenation of two strings $$$x$$$ and $$$y$$$ as $$$x+y$$$. For example, \"<span class=\"tex-font-style-tt\">()()</span>\"&nbsp;$$$+$$$&nbsp;\"<span class=\"tex-font-style-tt\">)(</span>\"&nbsp;$$$=$$$&nbsp;\"<span class=\"tex-font-style-tt\">()())(</span>\".</p><p>You are given $$$n$$$ bracket sequences $$$s_1, s_2, \\dots, s_n$$$. You can rearrange them in any order (you can rearrange only the strings themselves, but not the characters in them).</p><p>Your task is to rearrange the strings in such a way that the string $$$s_1 + s_2 + \\dots + s_n$$$ has as many non-empty prefixes that are RBS as possible.</p>","ru":"<p>Правильная скобочная последовательность (или, коротко, ПСП) — это скобочная последовательность, которую можно превратить в корректное арифметическое выражение, вставив символы «<span class=\"tex-font-style-tt\">1</span>» и «<span class=\"tex-font-style-tt\">+</span>» между исходными символами. Например:</p><ul> <li> скобочные последовательности «<span class=\"tex-font-style-tt\">()()</span>» и «<span class=\"tex-font-style-tt\">(())</span>» — правильные (из них можно получить выражения «<span class=\"tex-font-style-tt\">(1)+(1)</span>» и «<span class=\"tex-font-style-tt\">((1+1)+1)</span>»); </li><li> скобочные последовательности «<span class=\"tex-font-style-tt\">)(</span>», «<span class=\"tex-font-style-tt\">(</span>» и «<span class=\"tex-font-style-tt\">)</span>» — неправильные. </li></ul><p>Обозначим конкатенацию двух строк $$$x$$$ и $$$y$$$ как $$$x+y$$$. Например, «<span class=\"tex-font-style-tt\">()()</span>»&nbsp;$$$+$$$&nbsp;«<span class=\"tex-font-style-tt\">)(</span>»&nbsp;$$$=$$$&nbsp;«<span class=\"tex-font-style-tt\">()())(</span>».</p><p>У вас есть $$$n$$$ скобочных последовательностей $$$s_1, s_2, \\dots, s_n$$$. Вы можете переставить эти строки в любом порядке (можно переставлять только сами строки, но не символы в них).</p><p>Ваша задача — переставить строки в таком порядке, чтобы у строки $$$s_1 + s_2 + \\dots + s_n$$$ было как можно больше непустых префиксов, являющихся ПСП.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 20$$$).</p><p>Then $$$n$$$ lines follow, the $$$i$$$-th of them contains $$$s_i$$$&nbsp;— a bracket sequence (a string consisting of characters \"<span class=\"tex-font-style-tt\">(</span>\" and/or \"<span class=\"tex-font-style-tt\">)</span>\". All sequences $$$s_i$$$ are non-empty, their total length does not exceed $$$4 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке задано одно целое число $$$n$$$ ($$$1 \\le n \\le 20$$$).</p><p>Далее следуют $$$n$$$ строк, $$$i$$$-я из которых содержит $$$s_i$$$ — скобочную последовательность (строку, состоящую из символов «<span class=\"tex-font-style-tt\">(</span>» и/или «<span class=\"tex-font-style-tt\">)</span>». Все последовательности $$$s_i$$$ непустые, их суммарная длина не превосходит $$$4 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Print one integer&nbsp;— the maximum number of non-empty prefixes that are RBS for the string $$$s_1 + s_2 + \\dots + s_n$$$, if the strings $$$s_1, s_2, \\dots, s_n$$$ can be rearranged arbitrarily.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Выведите одно число — максимальное количество непустых префиксов, являющихся ПСП, у строки $$$s_1 + s_2 + \\dots + s_n$$$, если вы переставите строки $$$s_1, s_2, \\dots, s_n$$$ оптимальным образом.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first example, you can concatenate the strings as follows: \"<span class=\"tex-font-style-tt\">(</span>\"&nbsp;$$$+$$$&nbsp;\"<span class=\"tex-font-style-tt\">)</span>\"&nbsp;$$$=$$$&nbsp;\"<span class=\"tex-font-style-tt\">()</span>\", the resulting string will have one prefix, that is an RBS: \"<span class=\"tex-font-style-tt\">()</span>\".</p><p>In the second example, you can concatenate the strings as follows: \"<span class=\"tex-font-style-tt\">(</span>\"&nbsp;$$$+$$$&nbsp;\"<span class=\"tex-font-style-tt\">)</span>\"&nbsp;$$$+$$$&nbsp;\"<span class=\"tex-font-style-tt\">()()())</span>\"&nbsp;$$$+$$$&nbsp;\"<span class=\"tex-font-style-tt\">(</span>\"&nbsp;$$$=$$$&nbsp;\"<span class=\"tex-font-style-tt\">()()()())(</span>\", the resulting string will have four prefixes that are RBS: \"<span class=\"tex-font-style-tt\">()</span>\", \"<span class=\"tex-font-style-tt\">()()</span>\", \"<span class=\"tex-font-style-tt\">()()()</span>\", \"<span class=\"tex-font-style-tt\">()()()()</span>\".</p><p>The third and the fourth examples contain only one string each, so the order is fixed.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом примере из условия можно склеить строки следующим образом: «<span class=\"tex-font-style-tt\">(</span>»&nbsp;$$$+$$$&nbsp;«<span class=\"tex-font-style-tt\">)</span>»&nbsp;$$$=$$$&nbsp;«<span class=\"tex-font-style-tt\">()</span>», у полученной строки будет один префикс, являющийся ПСП: «<span class=\"tex-font-style-tt\">()</span>».</p><p>Во втором примере из условия можно склеить строки следующим образом: «<span class=\"tex-font-style-tt\">(</span>»&nbsp;$$$+$$$&nbsp;«<span class=\"tex-font-style-tt\">)</span>»&nbsp;$$$+$$$&nbsp;«<span class=\"tex-font-style-tt\">()()())</span>»&nbsp;$$$+$$$&nbsp;«<span class=\"tex-font-style-tt\">(</span>»&nbsp;$$$=$$$&nbsp;«<span class=\"tex-font-style-tt\">()()()())(</span>», у полученной строки будет четыре префикса, являющихся ПСП: «<span class=\"tex-font-style-tt\">()</span>», «<span class=\"tex-font-style-tt\">()()</span>», «<span class=\"tex-font-style-tt\">()()()</span>», «<span class=\"tex-font-style-tt\">()()()()</span>».</p><p>В третьем и в четвертом примере всего по одной строке, поэтому поменять порядок строк невозможно.</p>"},"sampleTestcases":[{"id":1659345378030,"input":"2\n(\n)\n","output":"1\n"},{"id":1659345378031,"input":"4\n()()())\n(\n(\n)\n","output":"4\n"},{"id":1659345378032,"input":"1\n(())\n","output":"1\n"},{"id":1659345378033,"input":"1\n)(()\n","output":"0\n"}],"submitUrl":"https://codeforces.com/contest/1598/submit","language":"python"}