{"title":{"en":"A. Regular Bracket Sequences","ru":"A. Правильные скобочные последовательности"},"contestId":"1574","problemIndex":"A","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"512 megabytes","ru":"512 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>A bracket sequence is a string containing only characters \"<span class=\"tex-font-style-tt\">(</span>\" and \"<span class=\"tex-font-style-tt\">)</span>\". A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"<span class=\"tex-font-style-tt\">1</span>\" and \"<span class=\"tex-font-style-tt\">+</span>\" between the original characters of the sequence. For example, bracket sequences \"<span class=\"tex-font-style-tt\">()()</span>\" and \"<span class=\"tex-font-style-tt\">(())</span>\" are regular (the resulting expressions are: \"<span class=\"tex-font-style-tt\">(1)+(1)</span>\" and \"<span class=\"tex-font-style-tt\">((1+1)+1)</span>\"), and \"<span class=\"tex-font-style-tt\">)(</span>\", \"<span class=\"tex-font-style-tt\">(</span>\" and \"<span class=\"tex-font-style-tt\">)</span>\" are not.</p><p>You are given an integer $$$n$$$. Your goal is to construct and print <span class=\"tex-font-style-bf\">exactly $$$n$$$</span> different regular bracket sequences of length $$$2n$$$.</p>","ru":"<p>Скобочная последовательность — это строка, состоящая только из символов «<span class=\"tex-font-style-tt\">(</span>» и «<span class=\"tex-font-style-tt\">)</span>». Правильной скобочной последовательностью называется скобочная последовательность, которую можно преобразовать в корректное арифметическое выражение путем вставок между ее символами символов '<span class=\"tex-font-style-tt\">1</span>' и '<span class=\"tex-font-style-tt\">+</span>'. Например, скобочные последовательности «<span class=\"tex-font-style-tt\">()()</span>», «<span class=\"tex-font-style-tt\">(())</span>» — правильные (полученные выражения: «<span class=\"tex-font-style-tt\">(1)+(1)</span>», «<span class=\"tex-font-style-tt\">((1+1)+1)</span>»), а «<span class=\"tex-font-style-tt\">)(</span>» и «<span class=\"tex-font-style-tt\">(</span>» — нет.</p><p>Вам дано целое число $$$n$$$. Ваша задача — построить и вывести <span class=\"tex-font-style-bf\">ровно $$$n$$$</span> различных правильных скобочных последовательностей длины $$$2n$$$.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 50$$$) — the number of test cases.</p><p>Each test case consists of one line containing one integer $$$n$$$ ($$$1 \\le n \\le 50$$$).</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке задано одно целое число $$$t$$$ ($$$1 \\le t \\le 50$$$) — количество наборов входных данных.</p><p>Каждый набор входных данных состоит из одной строки, содержащей единственное целое число $$$n$$$ ($$$1 \\le n \\le 50$$$).</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, print $$$n$$$ lines, each containing a regular bracket sequence of length <span class=\"tex-font-style-bf\">exactly $$$2n$$$</span>. All bracket sequences you output for a testcase should be different (though they may repeat in different test cases). If there are multiple answers, print any of them. It can be shown that it's always possible.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите $$$n$$$ строк, каждая из которых должна содержать одну правильную скобочную последовательность длины <span class=\"tex-font-style-bf\">ровно $$$2n$$$</span>. Все скобочные последовательности, которые вы выводите для одного набора входных данных, должны быть различны (хотя они могут совпадать в разных наборах входных данных). Если ответов несколько, выведите любой из них. Можно показать, что ответ всегда существует.</p>"},"noteHtml":{"en":null,"ru":null},"sampleTestcases":[{"id":1659345168694,"input":"3\n3\n1\n3\n","output":"()()()\n((()))\n(()())\n()\n((()))\n(())()\n()(())\n","result":{"id":1659345168694,"stdout":"()()()\n(())()()\n()(())()\n()\n()()()\n(())()()\n()(())()\n","stderr":"","exitcode":0,"signal":null,"time":721,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1574/submit","language":"python"}