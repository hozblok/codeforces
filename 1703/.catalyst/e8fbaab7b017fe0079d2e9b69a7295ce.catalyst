{"title":{"en":"G. Good Key, Bad Key","ru":"G. Хороший ключ, плохой ключ"},"contestId":"1703","problemIndex":"G","timeLimit":{"en":"3 seconds","ru":"3 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>There are $$$n$$$ chests. The $$$i$$$-th chest contains $$$a_i$$$ coins. You need to open all $$$n$$$ chests <span class=\"tex-font-style-bf\">in order from chest </span>$$$1$$$<span class=\"tex-font-style-bf\"> to chest </span>$$$n$$$.</p><p>There are two types of keys you can use to open a chest: </p><ul> <li> a good key, which costs $$$k$$$ coins to use; </li><li> a bad key, which does not cost any coins, but will halve all the coins in each unopened chest, <span class=\"tex-font-style-bf\">including the chest it is about to open</span>. The halving operation <span class=\"tex-font-style-bf\">will round down</span> to the nearest integer for each chest halved. In other words using a bad key to open chest $$$i$$$ will do $$$a_i = \\lfloor{\\frac{a_i}{2}\\rfloor}$$$, $$$a_{i+1} = \\lfloor\\frac{a_{i+1}}{2}\\rfloor, \\dots, a_n = \\lfloor \\frac{a_n}{2}\\rfloor$$$; </li><li> any key (both good and bad) breaks after a usage, that is, it is a one-time use. </li></ul><p>You need to use in total $$$n$$$ keys, one for each chest. Initially, you have no coins and no keys. If you want to use a good key, then you need to buy it.</p><p>During the process, you are allowed to go into debt; for example, if you have $$$1$$$ coin, you are allowed to buy a good key worth $$$k=3$$$ coins, and your balance will become $$$-2$$$ coins.</p><p>Find the maximum number of coins you can have after opening all $$$n$$$ chests in order from chest $$$1$$$ to chest $$$n$$$.</p>","ru":"<p>У вас есть $$$n$$$ сундуков. $$$i$$$-й сундук содержит $$$a_i$$$ монет. Вы должны открыть все $$$n$$$ сундуков <span class=\"tex-font-style-bf\">по порядку, начиная с сундука </span>$$$1$$$<span class=\"tex-font-style-bf\">, заканчивая сундуком </span>$$$n$$$.</p><p>Также существуют два вида ключей, которые вы можете использовать для открытия каждого сундука: </p><ul> <li> хороший ключ, который стоит $$$k$$$ монет; </li><li> плохой ключ, который бесплатен, но уменьшит вдвое количество монет в каждом неоткрытом сундуке, <span class=\"tex-font-style-bf\">включая сундук, который собираются им открыть</span>. Уменьшаясь вдвое, количество монет <span class=\"tex-font-style-bf\">округляется вниз</span> до ближайшего целого числа для каждого из сундуков. Иными словами, если используется плохой ключ, чтобы открыть сундук $$$i$$$, количества монет в сундуках изменятся следующим образом: $$$a_i = \\lfloor{\\frac{a_i}{2}\\rfloor}$$$, $$$a_{i+1} = \\lfloor\\frac{a_{i+1}}{2}\\rfloor, \\dots, a_n = \\lfloor \\frac{a_n}{2}\\rfloor$$$; </li><li> любой ключ (и хороший и плохой) ломается после использования, то есть является одноразовым. </li></ul><p>Вам необходимо использовать $$$n$$$ ключей, по одному на каждый сундук. Изначально у вас нет ключей и монет. Если вы хотите использовать хороший ключ, то его надо купить.</p><p>В процессе вы можете уходить в минус&nbsp;— например, если у вас есть $$$1$$$ монета, вы можете купить хороший ключ за $$$k=3$$$ монеты, и у вас станет $$$-2$$$ монеты.</p><p>Найдите максимальное количество монет, которое вы сможете получить в итоге после открытия всех $$$n$$$ сундуков по порядку от $$$1$$$ до $$$n$$$.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)&nbsp;— the number of test cases.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\leq n \\leq 10^5$$$; $$$0 \\leq k \\leq 10^9$$$)&nbsp;— the number of chests and the cost of a good key respectively.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_i$$$ ($$$0 \\leq a_i \\leq 10^9$$$) &nbsp;— the amount of coins in each chest.</p><p>The sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке содержится одно целое число $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)&nbsp;— количество наборов входных данных.</p><p>В первой строке каждого набора содержатся два целых числа $$$n$$$ и $$$k$$$ ($$$1 \\leq n \\leq 10^5$$$, $$$0 \\leq k \\leq 10^9$$$)&nbsp;— количество сундуков и стоимость хорошего ключа соответственно.</p><p>Вторая строка каждого набора содержит $$$n$$$ чисел $$$a_i$$$ ($$$0 \\leq a_i \\leq 10^9$$$) &nbsp;— количество монет в каждом из сундуков.</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам не превосходит $$$10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case output a single integer &nbsp;— the maximum number of coins you can obtain after opening the chests in order from chest $$$1$$$ to chest $$$n$$$.</p><p>Please note, that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like <span class=\"tex-font-style-tt\">long long</span> for C++).</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора выведите одно число &nbsp;— максимальное количество монет, которое вы сможете получить после открытия сундуков с $$$1$$$ по $$$n$$$.</p><p>Пожалуйста, обратите внимание, что ответ для некоторых наборов входных данных может не поместиться в 32-разрядный целочисленный тип, поэтому вы должны использовать по крайней мере 64-разрядный целочисленный тип в вашем языке программирования (например, <span class=\"tex-font-style-tt\">long long</span> для C++).</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, one possible strategy is as follows: </p><ul> <li> Buy a good key for $$$5$$$ coins, and open chest $$$1$$$, receiving $$$10$$$ coins. Your current balance is $$$0 + 10 - 5 = 5$$$ coins. </li><li> Buy a good key for $$$5$$$ coins, and open chest $$$2$$$, receiving $$$10$$$ coins. Your current balance is $$$5 + 10 - 5 = 10$$$ coins. </li><li> Use a bad key and open chest $$$3$$$. As a result of using a bad key, the number of coins in chest $$$3$$$ becomes $$$\\left\\lfloor \\frac{3}{2} \\right\\rfloor = 1$$$, and the number of coins in chest $$$4$$$ becomes $$$\\left\\lfloor \\frac{1}{2} \\right\\rfloor = 0$$$. Your current balance is $$$10 + 1 = 11$$$. </li><li> Use a bad key and open chest $$$4$$$. As a result of using a bad key, the number of coins in chest $$$4$$$ becomes $$$\\left\\lfloor \\frac{0}{2} \\right\\rfloor = 0$$$. Your current balance is $$$11 + 0 = 11$$$. </li></ul> At the end of the process, you have $$$11$$$ coins, which can be proven to be maximal.","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе одна из возможных стратегий следующая: </p><ul> <li> Купить хороший ключ за $$$5$$$ монет, и открыть сундук $$$1$$$, получив $$$10$$$ монет. Ваш баланс станет $$$0 + 10 - 5 = 5$$$ монет. </li><li> Купить хороший ключ за $$$5$$$ монет, и открыть сундук $$$2$$$, получив $$$10$$$ монет. Ваш баланс станет $$$5 + 10 - 5 = 10$$$ монет. </li><li> Использовать плохой ключ, и открыть им сундук $$$3$$$. В результате использования плохого ключа, количество монет в сундуке $$$3$$$ становится $$$\\left\\lfloor \\frac{3}{2} \\right\\rfloor = 1$$$, и количество монет в сундуке $$$4$$$ становится $$$\\left\\lfloor \\frac{1}{2} \\right\\rfloor = 0$$$. Ваш баланс станет $$$10 + 1 = 11$$$. </li><li> Использовать плохой ключ, и открыть им сундук $$$4$$$. В результате использования плохого ключа, количество монет в сундуке $$$4$$$ станет $$$\\left\\lfloor \\frac{0}{2} \\right\\rfloor = 0$$$. Ваш баланс станет $$$11 + 0 = 11$$$. </li></ul> После открытия всех сундуков, у вас останется $$$11$$$ монет. Можно доказать, что получить больше монет невозможно."},"sampleTestcases":[{"id":1658858939450,"input":"5\n4 5\n10 10 3 1\n1 2\n1\n3 12\n10 10 29\n12 51\n5 74 89 45 18 69 67 67 11 96 23 59\n2 57\n85 60\n","output":"11\n0\n13\n60\n58\n"}],"submitUrl":"https://codeforces.com/contest/1703/submit","language":"python"}